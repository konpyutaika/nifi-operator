---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: nifinodegroupautoscalers.nifi.konpyutaika.com
spec:
  group: nifi.konpyutaika.com
  names:
    kind: NifiNodeGroupAutoscaler
    listKind: NifiNodeGroupAutoscalerList
    plural: nifinodegroupautoscalers
    singular: nifinodegroupautoscaler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NifiNodeGroupAutoscaler is the Schema for the nifinodegroupautoscalers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NifiNodeGroupAutoscalerSpec defines the desired state of
              NifiNodeGroupAutoscaler
            properties:
              clusterRef:
                description: contains the reference to the NifiCluster with the one
                  the dataflow is linked.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              downscaleStrategy:
                description: The strategy to use when scaling down the nifi cluster
                enum:
                - lifo
                - nonprimary
                - leastbusy
                type: string
              horizontalAutoscaler:
                description: Configuration for the HorizontalPodAutoscaler
                properties:
                  behavior:
                    description: behavior configures the scaling behavior of the target
                      in both Up and Down directions (scaleUp and scaleDown fields
                      respectively). If not set, the default HPAScalingRules for scale
                      up and scale down are used.
                    properties:
                      scaleDown:
                        description: scaleDown is scaling policy for scaling Down.
                          If not set, the default value is to allow to scale down
                          to minReplicas pods, with a 300 second stabilization window
                          (i.e., the highest recommendation for the last 300sec is
                          used).
                        properties:
                          policies:
                            description: policies is a list of potential scaling polices
                              which can be used during scaling. At least one policy
                              must be specified, otherwise the HPAScalingRules will
                              be discarded as invalid
                            items:
                              description: HPAScalingPolicy is a single policy which
                                must hold true for a specified past interval.
                              properties:
                                periodSeconds:
                                  description: PeriodSeconds specifies the window
                                    of time for which the policy should hold true.
                                    PeriodSeconds must be greater than zero and less
                                    than or equal to 1800 (30 min).
                                  format: int32
                                  type: integer
                                type:
                                  description: Type is used to specify the scaling
                                    policy.
                                  type: string
                                value:
                                  description: Value contains the amount of change
                                    which is permitted by the policy. It must be greater
                                    than zero
                                  format: int32
                                  type: integer
                              required:
                              - periodSeconds
                              - type
                              - value
                              type: object
                            type: array
                          selectPolicy:
                            description: selectPolicy is used to specify which policy
                              should be used. If not set, the default value MaxPolicySelect
                              is used.
                            type: string
                          stabilizationWindowSeconds:
                            description: 'StabilizationWindowSeconds is the number
                              of seconds for which past recommendations should be
                              considered while scaling up or scaling down. StabilizationWindowSeconds
                              must be greater than or equal to zero and less than
                              or equal to 3600 (one hour). If not set, use the default
                              values: - For scale up: 0 (i.e. no stabilization is
                              done). - For scale down: 300 (i.e. the stabilization
                              window is 300 seconds long).'
                            format: int32
                            type: integer
                        type: object
                      scaleUp:
                        description: 'scaleUp is scaling policy for scaling Up. If
                          not set, the default value is the higher of: * increase
                          no more than 4 pods per 60 seconds * double the number of
                          pods per 60 seconds No stabilization is used.'
                        properties:
                          policies:
                            description: policies is a list of potential scaling polices
                              which can be used during scaling. At least one policy
                              must be specified, otherwise the HPAScalingRules will
                              be discarded as invalid
                            items:
                              description: HPAScalingPolicy is a single policy which
                                must hold true for a specified past interval.
                              properties:
                                periodSeconds:
                                  description: PeriodSeconds specifies the window
                                    of time for which the policy should hold true.
                                    PeriodSeconds must be greater than zero and less
                                    than or equal to 1800 (30 min).
                                  format: int32
                                  type: integer
                                type:
                                  description: Type is used to specify the scaling
                                    policy.
                                  type: string
                                value:
                                  description: Value contains the amount of change
                                    which is permitted by the policy. It must be greater
                                    than zero
                                  format: int32
                                  type: integer
                              required:
                              - periodSeconds
                              - type
                              - value
                              type: object
                            type: array
                          selectPolicy:
                            description: selectPolicy is used to specify which policy
                              should be used. If not set, the default value MaxPolicySelect
                              is used.
                            type: string
                          stabilizationWindowSeconds:
                            description: 'StabilizationWindowSeconds is the number
                              of seconds for which past recommendations should be
                              considered while scaling up or scaling down. StabilizationWindowSeconds
                              must be greater than or equal to zero and less than
                              or equal to 3600 (one hour). If not set, use the default
                              values: - For scale up: 0 (i.e. no stabilization is
                              done). - For scale down: 300 (i.e. the stabilization
                              window is 300 seconds long).'
                            format: int32
                            type: integer
                        type: object
                    type: object
                  maxReplicas:
                    description: maxReplicas is the upper limit for the number of
                      replicas to which the autoscaler can scale up. It cannot be
                      less that minReplicas.
                    format: int32
                    type: integer
                  metrics:
                    description: metrics contains the specifications for which to
                      use to calculate the desired replica count (the maximum replica
                      count across all metrics will be used).  The desired replica
                      count is calculated multiplying the ratio between the target
                      value and the current value by the current number of pods.  Ergo,
                      metrics used must decrease as the pod count is increased, and
                      vice-versa.  See the individual metric source types for more
                      information about how each type of metric must respond. If not
                      set, the default metric will be set to 80% average CPU utilization.
                    items:
                      description: MetricSpec specifies how to scale based on a single
                        metric (only `type` and one other matching field should be
                        set at once).
                      properties:
                        containerResource:
                          description: container resource refers to a resource metric
                            (such as those specified in requests and limits) known
                            to Kubernetes describing a single container in each pod
                            of the current scale target (e.g. CPU or memory). Such
                            metrics are built in to Kubernetes, and have special scaling
                            options on top of those available to normal per-pod metrics
                            using the "pods" source. This is an alpha feature and
                            can be enabled by the HPAContainerMetrics feature flag.
                          properties:
                            container:
                              description: container is the name of the container
                                in the pods of the scaling target
                              type: string
                            name:
                              description: name is the name of the resource in question.
                              type: string
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                          required:
                          - container
                          - name
                          - target
                          type: object
                        external:
                          description: external refers to a global metric that is
                            not associated with any Kubernetes object. It allows autoscaling
                            based on information coming from components running outside
                            of cluster (for example length of queue in cloud messaging
                            service, or QPS from loadbalancer running outside of cluster).
                          properties:
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                          required:
                          - metric
                          - target
                          type: object
                        object:
                          description: object refers to a metric describing a single
                            kubernetes object (for example, hits-per-second on an
                            Ingress object).
                          properties:
                            describedObject:
                              description: CrossVersionObjectReference contains enough
                                information to let you identify the referred resource.
                              properties:
                                apiVersion:
                                  description: API version of the referent
                                  type: string
                                kind:
                                  description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                                  type: string
                                name:
                                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                          required:
                          - describedObject
                          - metric
                          - target
                          type: object
                        pods:
                          description: pods refers to a metric describing each pod
                            in the current scale target (for example, transactions-processed-per-second).  The
                            values will be averaged together before being compared
                            to the target value.
                          properties:
                            metric:
                              description: metric identifies the target metric by
                                name and selector
                              properties:
                                name:
                                  description: name is the name of the given metric
                                  type: string
                                selector:
                                  description: selector is the string-encoded form
                                    of a standard kubernetes label selector for the
                                    given metric When set, it is passed as an additional
                                    parameter to the metrics server for more specific
                                    metrics scoping. When unset, just the metricName
                                    will be used to gather metrics.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                          required:
                          - metric
                          - target
                          type: object
                        resource:
                          description: resource refers to a resource metric (such
                            as those specified in requests and limits) known to Kubernetes
                            describing each pod in the current scale target (e.g.
                            CPU or memory). Such metrics are built in to Kubernetes,
                            and have special scaling options on top of those available
                            to normal per-pod metrics using the "pods" source.
                          properties:
                            name:
                              description: name is the name of the resource in question.
                              type: string
                            target:
                              description: target specifies the target value for the
                                given metric
                              properties:
                                averageUtilization:
                                  description: averageUtilization is the target value
                                    of the average of the resource metric across all
                                    relevant pods, represented as a percentage of
                                    the requested value of the resource for the pods.
                                    Currently only valid for Resource metric source
                                    type
                                  format: int32
                                  type: integer
                                averageValue:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: averageValue is the target value of
                                    the average of the metric across all relevant
                                    pods (as a quantity)
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                type:
                                  description: type represents whether the metric
                                    type is Utilization, Value, or AverageValue
                                  type: string
                                value:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: value is the target value of the metric
                                    (as a quantity).
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                          required:
                          - name
                          - target
                          type: object
                        type:
                          description: 'type is the type of metric source.  It should
                            be one of "ContainerResource", "External", "Object", "Pods"
                            or "Resource", each mapping to a matching field in the
                            object. Note: "ContainerResource" type is available on
                            when the feature-gate HPAContainerMetrics is enabled'
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  minReplicas:
                    description: minReplicas is the lower limit for the number of
                      replicas to which the autoscaler can scale down.
                    format: int32
                    type: integer
                required:
                - maxReplicas
                type: object
              nodeConfigGroupId:
                description: reference to the nodeConfigGroup that will be managed
                  and autoscaled This Id is used to compute the names of some Kubernetes
                  resources, so it must be a safe value.
                maxLength: 63
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                type: string
              nodeLabelsSelector:
                description: A label selector used to identify & manage Node objects
                  in the referenced NifiCluster. Any node matching this selector will
                  be managed by this autoscaler. Even if that node was previously
                  statically defined.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              readOnlyConfig:
                description: the node readOnlyConfig for each node in the node group
                properties:
                  additionalSharedEnvs:
                    description: AdditionalSharedEnvs define a set of additional env
                      variables that will shared between all init containers and containers
                      in the pod.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  bootstrapNotificationServicesConfig:
                    description: BootstrapNotificationServices configuration that
                      will be applied to the node.
                    properties:
                      replaceConfigMap:
                        description: bootstrap_notifications_services.xml configuration
                          that will replace the one produced based on template
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                      replaceSecretConfig:
                        description: bootstrap_notifications_services.xml configuration
                          that will replace the one produced based on template and
                          overrideConfigMap
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                    type: object
                  bootstrapProperties:
                    description: BootstrapProperties configuration that will be applied
                      to the node.
                    properties:
                      nifiJvmMemory:
                        description: JVM memory settings
                        type: string
                      overrideConfigMap:
                        description: Additionnals bootstrap.properties configuration
                          that will override the one produced based on template and
                          configuration
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                      overrideConfigs:
                        description: Additionnals bootstrap.properties configuration
                          that will override the one produced based on template and
                          configurations.
                        type: string
                      overrideSecretConfig:
                        description: Additionnals bootstrap.properties configuration
                          that will override the one produced based on template, configurations,
                          overrideConfigMap and overrideConfigs.
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                    type: object
                  logbackConfig:
                    description: Logback configuration that will be applied to the
                      node.
                    properties:
                      replaceConfigMap:
                        description: logback.xml configuration that will replace the
                          one produced based on template
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                      replaceSecretConfig:
                        description: logback.xml configuration that will replace the
                          one produced based on template and overrideConfigMap
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                    type: object
                  maximumEventDrivenThreadCount:
                    description: MaximumEventDrivenThreadCount define the maximum
                      number of threads for event driven processors available to the
                      system.
                    format: int32
                    type: integer
                  maximumTimerDrivenThreadCount:
                    description: MaximumTimerDrivenThreadCount define the maximum
                      number of threads for timer driven processors available to the
                      system.
                    format: int32
                    type: integer
                  nifiProperties:
                    description: NifiProperties configuration that will be applied
                      to the node.
                    properties:
                      authorizer:
                        description: Indicates which of the configured authorizers
                          in the authorizers.xml file to use https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#authorizer-configuration
                        type: string
                      needClientAuth:
                        description: Nifi security client auth
                        type: boolean
                      overrideConfigMap:
                        description: Additionnals nifi.properties configuration that
                          will override the one produced based on template and configuration
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                      overrideConfigs:
                        description: Additionnals nifi.properties configuration that
                          will override the one produced based on template, configurations
                          and overrideConfigMap.
                        type: string
                      overrideSecretConfig:
                        description: Additionnals nifi.properties configuration that
                          will override the one produced based on template, configurations,
                          overrideConfigMap and overrideConfigs.
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                      webProxyHosts:
                        description: A comma separated list of allowed HTTP Host header
                          values to consider when NiFi is running securely and will
                          be receiving requests to a different host[:port] than it
                          is bound to. https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#web-properties
                        items:
                          type: string
                        type: array
                    type: object
                  zookeeperProperties:
                    description: ZookeeperProperties configuration that will be applied
                      to the node.
                    properties:
                      overrideConfigMap:
                        description: Additionnals zookeeper.properties configuration
                          that will override the one produced based on template and
                          configuration
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                      overrideConfigs:
                        description: Additionnals zookeeper.properties configuration
                          that will override the one produced based on template and
                          configurations.
                        type: string
                      overrideSecretConfig:
                        description: Additionnals zookeeper.properties configuration
                          that will override the one produced based on template, configurations,
                          overrideConfigMap and overrideConfigs.
                        properties:
                          data:
                            description: The key of the value,in data content, that
                              we want use.
                            type: string
                          name:
                            description: Name of the configmap that we want to refer.
                            type: string
                          namespace:
                            description: Namespace where is located the secret that
                              we want to refer.
                            type: string
                        required:
                        - data
                        - name
                        type: object
                    type: object
                type: object
              replicas:
                default: 1
                description: current number of replicas expected for the node config
                  group
                format: int32
                type: integer
              upscaleStrategy:
                description: The strategy to use when scaling up the nifi cluster
                enum:
                - graceful
                - simple
                type: string
            required:
            - clusterRef
            - horizontalAutoscaler
            - nodeConfigGroupId
            - nodeLabelsSelector
            type: object
          status:
            description: NifiNodeGroupAutoscalerStatus defines the observed state
              of NifiNodeGroupAutoscaler
            properties:
              replicas:
                description: the current number of replicas in this cluster
                format: int32
                type: integer
              selector:
                description: label selectors for cluster child pods. HPA uses this
                  to identify pod replicas
                type: string
              state:
                description: The state of this autoscaler
                type: string
            required:
            - replicas
            - selector
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
