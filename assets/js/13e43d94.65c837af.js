"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[62762],{9976:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"5_references/7_nifi_nodegroup_autoscaler","title":"NiFi NodeGroup Autoscaler","description":"NifiNodeGroupAutoscaler is the Schema through which you configure automatic scaling of NifiCluster deployments.","source":"@site/../docs/5_references/7_nifi_nodegroup_autoscaler.md","sourceDirName":"5_references","slug":"/5_references/7_nifi_nodegroup_autoscaler","permalink":"/nifikop/docs/next/5_references/7_nifi_nodegroup_autoscaler","draft":false,"unlisted":false,"editUrl":"https://github.com/konpyutaika/nifikop/edit/master/site/website/../docs/5_references/7_nifi_nodegroup_autoscaler.md","tags":[],"version":"current","lastUpdatedBy":"Juldrixx","lastUpdatedAt":1694531685000,"frontMatter":{"id":"7_nifi_nodegroup_autoscaler","title":"NiFi NodeGroup Autoscaler","sidebar_label":"NiFi NodeGroup Autoscaler"},"sidebar":"docs","previous":{"title":"NiFi UserGroup","permalink":"/nifikop/docs/next/5_references/6_nifi_usergroup"},"next":{"title":"NiFi Connection","permalink":"/nifikop/docs/next/5_references/8_nifi_connection"}}');var n=i(62540),r=i(43023);const d={id:"7_nifi_nodegroup_autoscaler",title:"NiFi NodeGroup Autoscaler",sidebar_label:"NiFi NodeGroup Autoscaler"},o=void 0,c={},l=[{value:"NifiNodeGroupAutoscaler",id:"nifinodegroupautoscaler",level:2},{value:"NifiNodeGroupAutoscalerSpec",id:"nifinodegroupautoscalerspec",level:2},{value:"NifiNodeGroupAutoscalerStatus",id:"nifinodegroupautoscalerstatus",level:2}];function a(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"NifiNodeGroupAutoscaler"})," is the Schema through which you configure automatic scaling of ",(0,n.jsx)(t.code,{children:"NifiCluster"})," deployments."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"apiVersion: nifi.konpyutaika.com/v1alpha1\nkind: NifiNodeGroupAutoscaler\nmetadata:\n  name: nifinodegroupautoscaler-sample\nspec:\n  # contains the reference to the NifiCluster with the one the node group autoscaler is linked.\n  clusterRef:\n    name: nificluster-name\n    namespace: nifikop\n  # defines the id of the NodeConfig contained in NifiCluster.Spec.NodeConfigGroups\n  nodeConfigGroupId: default-node-group\n  # The selector used to identify nodes in NifiCluster.Spec.Nodes this autoscaler will manage\n  # Use Node.Labels in combination with this selector to clearly define which nodes will be managed by this autoscaler \n  nodeLabelsSelector: \n    matchLabels:\n      nifi_cr: nificluster-name\n      nifi_node_group: default-node-group\n  # the strategy used to decide how to add nodes to a nifi cluster\n  upscaleStrategy: simple\n  # the strategy used to decide how to remove nodes from an existing cluster\n  downscaleStrategy: lifo\n"})}),"\n",(0,n.jsx)(t.h2,{id:"nifinodegroupautoscaler",children:"NifiNodeGroupAutoscaler"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Field"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Default"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"metadata"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#ObjectMeta",children:"ObjectMetadata"})}),(0,n.jsx)(t.td,{children:"is metadata that all persisted resources must have, which includes all objects nodegroupautoscalers must create."}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"nil"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"spec"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"#nifinodegroupautoscalerspec",children:"NifiNodeGroupAutoscalerSpec"})}),(0,n.jsx)(t.td,{children:"defines the desired state of NifiNodeGroupAutoscaler."}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"nil"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"status"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"#nifinodegroupautoscalerstatus",children:"NifiNodeGroupAutoscalerStatus"})}),(0,n.jsx)(t.td,{children:"defines the observed state of NifiNodeGroupAutoscaler."}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"nil"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"nifinodegroupautoscalerspec",children:"NifiNodeGroupAutoscalerSpec"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Field"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Default"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"clusterRef"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"./2_nifi_user#clusterreference",children:"ClusterReference"})}),(0,n.jsx)(t.td,{children:"contains the reference to the NifiCluster containing the node group this autoscaler should manage."}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"nodeConfigGroupId"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsxs)(t.td,{children:["defines the id of the ",(0,n.jsx)(t.a,{href:"./1_nifi_cluster/3_node_config",children:"NodeConfig"})," contained in ",(0,n.jsx)(t.code,{children:"NifiCluster.Spec.NodeConfigGroups"}),"."]}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"nodeLabelsSelector"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#LabelSelector",children:"LabelSelector"})}),(0,n.jsxs)(t.td,{children:["defines the set of labels used to identify nodes in a ",(0,n.jsx)(t.code,{children:"NifiCluster"})," node config group. Use ",(0,n.jsx)(t.code,{children:"Node.Labels"})," in combination with this selector to clearly define which nodes will be managed by this autoscaler. Take care to avoid having mutliple autoscalers managing the same nodes."]}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"readOnlyConfig"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"./1_nifi_cluster/2_read_only_config",children:"ReadOnlyConfig"})}),(0,n.jsxs)(t.td,{children:["defines a readOnlyConfig to apply to each node in this node group. Any settings here will override those set in the configured ",(0,n.jsx)(t.code,{children:"nodeConfigGroupId"}),"."]}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"nodeConfig"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"./1_nifi_cluster/3_node_config",children:"NodeConfig"})}),(0,n.jsxs)(t.td,{children:["defines a nodeConfig to apply to each node in this node group. Any settings here will override those set in the configured ",(0,n.jsx)(t.code,{children:"nodeConfigGroupId"}),"."]}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"upscaleStrategy"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsxs)(t.td,{children:["The strategy NiFiKop will use to scale up the nodes managed by this autoscaler. Must be one of ","simple","."]}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"downscaleStrategy"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsxs)(t.td,{children:["The strategy NiFiKop will use to scale down the nodes managed by this autoscaler. Must be one of ","lifo","."]}),(0,n.jsx)(t.td,{children:"Yes"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"replicas"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsxs)(t.td,{children:["the initial number of replicas to configure the ",(0,n.jsx)(t.code,{children:"HorizontalPodAutoscaler"})," with. After the initial configuration, this ",(0,n.jsx)(t.code,{children:"replicas"})," configuration will be automatically updated by the Kubernetes ",(0,n.jsx)(t.code,{children:"HorizontalPodAutoscaler"})," controller."]}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"0"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"nifinodegroupautoscalerstatus",children:"NifiNodeGroupAutoscalerStatus"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Field"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Required"}),(0,n.jsx)(t.th,{children:"Default"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"state"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"the state of the nodegroup autoscaler. This is set by the autoscaler."}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"replicas"}),(0,n.jsx)(t.td,{children:"int"}),(0,n.jsx)(t.td,{children:"the current number of replicas running in the node group this autoscaler is managing. This is set by the autoscaler."}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"-"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"selector"}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsxs)(t.td,{children:["the ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",children:"selector"})," used by the ",(0,n.jsx)(t.code,{children:"HorizontalPodAutoscaler"})," controller to identify the replicas in this node group. This is set by the autoscaler."]}),(0,n.jsx)(t.td,{children:"No"}),(0,n.jsx)(t.td,{children:"-"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},43023:(e,t,i)=>{i.d(t,{R:()=>d,x:()=>o});var s=i(63696);const n={},r=s.createContext(n);function d(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);