variables:
  GIT_STRATEGY: clone
  IMAGE_NAME: nifikop
  APPNAME: nifikop
stages:
  - compile
  - unit-test
  - build
  - reporting
  - release
  - website

generate:
  image: registry.github.com/Orange-OpenSource/nifikop/nifikop-build:v0.15.0-pr137
  stage: compile
  script:
    - if [ ! -d vendor ]; then go mod download; fi
    - if [ ! -d vendor ]; then go mod vendor; fi
    - make generate
    - if ! [ "$(git ls-files -m |grep -c zz_generated)" -eq 0 ]; then exit 1; fi
  artifacts:
    paths:
      - build/_output
      - vendor

test:unit:
  image: registry.github.com/Orange-OpenSource/nifikop/nifikop-build:v0.15.0-pr137
  stage: unit-test
  script:
    - make unit-test-with-vendor
  artifacts:
    paths:
      - coverage.out
      - test-report.out
      - coverage.html
  dependencies:
    - generate

build:ci:
  image: sfy-search-registry-build.artifactory.si.francetelecom.fr/build/docker:dind
  stage: build
  variables:
    BUILD_IMAGE: "$CI_REGISTRY_IMAGE/nifikop-build"
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - make build-ci-image
    - make push-ci-image
  when: manual

build:docker:
  image: registry.github.com/Orange-OpenSource/nifikop/nifikop-build:v0.15.0-pr137
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - make build
    - make push
  environment: internal-registry
  dependencies:
    - test:unit

report:sonar:
  image: registry.gitlab.si.francetelecom.fr/analytics/build-images/sonar-scanner:3.0.3.778
  stage: reporting
  variables:
    SONAR_HOST_URL: http://sonar.pic.s1.p.fti.net
    SONAR_ORGANIZATION: orangeopensource
  allow_failure: true
  script:
    - export PROJECT_VERSION=${CI_COMMIT_TAG#v}
    - if [ -z $CI_COMMIT_TAG ];then BUILD_VERSION=$CI_COMMIT_REF_NAME; else BUILD_VERSION=${CI_COMMIT_TAG#v}; fi
    - envsubst < $CI_PROJECT_DIR/.ci/sonar_properties.tpl > .sonar.properties
    # on lance la commande sonar
    - sonar-scanner -X -Dproject.settings=.sonar.properties -Dsonar.projectVersion=$BUILD_VERSION
    - ls -la
  only:
#    - branches
    - master
  dependencies:
    - test:unit
  artifacts:
    paths:
      - reports

release:operator:dfyarchicloud:
  image: registry.github.com/Orange-OpenSource/nifikop/nifikop-build:v0.15.0-pr137
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} registry.gitlab.si.francetelecom.fr/dfyarchicloud/dfyarchicloud-registry/${IMAGE_NAME}:${CI_COMMIT_TAG}
    - docker login -u $ARTI_USER -p $ARTI_PASS registry.gitlab.si.francetelecom.fr
    - docker push registry.gitlab.si.francetelecom.fr/dfyarchicloud/dfyarchicloud-registry/${IMAGE_NAME}:$CI_BUILD_TAG
  only:
    - tags
  environment: dfyarchicloud-registry
  dependencies:
    - build:docker

release:helm:gcs:
  image: google/cloud-sdk
  stage: release
  script: |
    GCP_SA_CREDS=${GCP_POC_RTC_SA_KEY} tools/publish_helm_gcs.sh
  only:
    - tags
  environment: gcs-helm
  dependencies:
    - build:docker

# ===============================================
#    WEB SITE
# ===============================================

pages:
  stage: website
  image: node:13.5.0
  before_script: []
  script:
    - cd website
    - mkdir -p ../public
    - yarn install
    - yarn build
    # The build directory is created based on the value set for projectName in
    # website/siteConfig.js. If you change it there, you need to change it here
    # as well.
    - cp -R build/* ../public/
    - ls ../public
  artifacts:
    paths:
      - public
  only:
    - master
  when: manual
  environment:
    name: page
    url: https://orange-opensource.github.io/nifikop/